@model SPCF.ViewModels.Author.Edit


<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Authors", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Authors</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Image)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })

                @if (Model.Image == null)
                {
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => Model.Upload, new { type = "file", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Upload, "", new { @class = "text-danger" })
                    </div>
                }
                else
                {
                    <div class="col-md-10">
                        @{var base64 = Convert.ToBase64String(Model.Image);}
                        @{String img64Url = string.Format("data:image;" + "base64,{0}", base64);}

                        <img src="@img64Url" style="width:110px; height:150px; padding-top:10px" />

                        <div style="margin-top:5px;">
                            <ul class="list-inline" style="list-style:none">
                                <li class="btn btn-sm"><a href="@Url.Action("DeleteImage", "Authors", new { AuthorId = Model.Id })">Delete</a></li>
                            </ul>
                        </div>
                    </div>
                }
            </div>

        <div class="col-md-offset-0"><input type="submit" value="Save" class="btn btn-default" /></div>

  </div>
 }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
